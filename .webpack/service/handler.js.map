{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"mongoose\"","webpack:///external \"stack-trace\"","webpack:///external \"debug\"","webpack:///external \"path\"","webpack:///./src/api/helpers/logger.js","webpack:///./src/api/hello/index.js","webpack:///./src/api/graphql/item/item.graphql","webpack:///./src/api/models/items.js","webpack:///./src/api/graphql/item/item-resolvers.js","webpack:///./src/api/graphql/item/index.js","webpack:///./src/api/graphql/customer/customer.graphql","webpack:///./src/api/models/customers.js","webpack:///./src/api/graphql/customer/customer-resolvers.js","webpack:///./src/api/graphql/customer/index.js","webpack:///./src/api/graphql/user/user.graphql","webpack:///./src/api/models/users.js","webpack:///./src/api/graphql/user/user-resolvers.js","webpack:///./src/api/graphql/user/index.js","webpack:///external \"lodash\"","webpack:///external \"graphql-tools\"","webpack:///./src/api/graphql/schema.js","webpack:///external \"apollo-server-hapi\"","webpack:///./src/api/graphql/index.js","webpack:///external \"events\"","webpack:///./src/api/config/server.js","webpack:///external \"confidence\"","webpack:///./src/api/config/index.js","webpack:///external \"graphql-playground-middleware-hapi\"","webpack:///./src/api/playground/index.js","webpack:///./src/api/manifest.js","webpack:///external \"graphql-playground-middleware-lambda\"","webpack:///external \"hapi\"","webpack:///./handler.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","target","echo","trace","stackTrace","length","frame","basename","path","getFileName","replace","method","getFunctionName","getLineNumber","logger","log","_debug2","default","error","console","plugin","register","async","server","options","route","handler","request","h","Promise","resolve","Schema","Mongoose","itemSchema","description","type","String","sku","price","Number","agentid","ObjectId","ref","Items","model","itemResolvers","Query","getItemByName","root","params","findOne","itemType","customerSchema","status","Customers","customerResolvers","getCustomerByName","Mutation","createCustomer","findOneAndUpdate","$set","new","upsert","customerType","userSchema","organization","office","offcies","Array","profile","firstName","lastName","roles","password","gender","managerid","customerids","createdAt","Date","now","updatedAt","dialogflow","userStorage","Users","userResolvers","getUser","user","createUser","userType","_graphqlTools","_user","_customer","_item","schema","makeExecutableSchema","typeDefs","baseSchema","resolvers","_","merge","_apolloServerHapi","graphqlHapi","graphqlOptions","_ref","payload","Events","EventEmitter","_maxListeners","process","setMaxListeners","port","env","PORT","host","routes","cors","criteria","dockerEnv","DOCKER_ENV","config","$meta","pkg","store","Confidence","Store","load","doc","hapiPlayground","endpoint","manifest","Config","plugins","graphql","playground","MongoDBUrl","MONGODB_URI","event","context","hapi","Server","Manifest","start","mongoose","connect","then","catch","queryStringParameters","httpMethod","body","reqHeaders","headers","url","qs","keys","map","join","inject","validate","statusCode","result","_graphqlPlaygroundMiddlewareLambda2"],"mappings":"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","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","module.exports = require(\"mongoose\");","module.exports = require(\"stack-trace\");","module.exports = require(\"debug\");","module.exports = require(\"path\");","import path from 'path'\n\nimport debug from 'debug'\nimport stackTrace from 'stack-trace'\n\nexport default target => {\n  const echo = () => {\n    const trace = stackTrace.get()\n    if (trace.length > 1) {\n      const deep = 2\n      const frame = trace[deep]\n      const basename = path.basename(frame.getFileName()).replace('.js', '')\n      const method = frame.getFunctionName()\n      const functionName = method ? method : 'anonymous'\n      return ` ${basename}:${functionName}:${frame.getLineNumber()}`\n    }\n    return ' '\n  }\n  const logger = {\n    log: debug(`TP:${target}${echo()}`), // eslint-disable-line\n    error: debug(`TP:${target}${echo()}`) // eslint-disable-line\n  }\n\n  logger.log.log = console.log.bind(console) // eslint-disable-line\n  logger.error.log = console.error.bind(console) // eslint-disable-line\n\n  return logger\n}\n","/**\n * Hello\n * Returns a hello world message and the hostname of the machine the\n * server is running on\n *\n * url: /hello\n */\n\n/**\n * System imports\n *\n **/\n\n/**\n * Plugin\n *\n **/\nimport Logger from '../helpers/logger'\n\nconst log = Logger('hello').log\n\nexports.plugin = {\n  name: 'smd',\n  register: async (server, options) => {\n    server.route({\n      method: 'GET',\n      path: '/hello',\n      handler: async (request, h) => {\n        log('hi')\n        return 'it works'\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","module.exports = \"type Item {\\n  _id: ID!\\n  name: String,\\n  description: String,\\n  price: String,\\n  agentid: ID\\n}\\n\\nextend type Query {\\n  getItemByName(name: String!): Item\\n}\"","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst itemSchema = new Schema({\n  description: { type: String, default: '' },\n  name: { type: String, default: '' },\n  sku: { type: String, default: '' },\n  price: { type: Number, default: 0 },\n  agentid: { type: Schema.ObjectId, ref: 'Users' }\n})\n\nlet Items\n\ntry {\n  Items = Mongoose.model('Items', itemSchema)\n} catch (error) {\n  Items = Mongoose.model('Items')\n}\n\nmodule.exports = Items\n","import Items from '../../models/items'\n\nexport const itemResolvers = {\n  Query: {\n    getItemByName: async (root, params) => {\n      const item = await Items.findOne({ name: params.name })\n      return item\n    }\n  }\n}\n","import * as itemType from './item.graphql'\n\nexport { itemResolvers } from './item-resolvers'\nexport { itemType }\n","module.exports = \"type Customer {\\n  _id: ID!\\n  name: String!\\n  agentid: ID!\\n  status: String\\n}\\n\\nextend type Query {\\n  getCustomerByName(name: String): Customer\\n}\\n\\nextend type Mutation {\\n  createCustomer(name: String!, agentid: ID!, status: String): Customer\\n}\"","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst customerSchema = new Schema({\n  name: { type: String, default: '' },\n  agentid: { type: Schema.ObjectId, ref: 'Users' },\n  status: { type: String, default: 'dead' }\n})\n\nlet Customers\ntry {\n  Customers = Mongoose.model('Customers', customerSchema)\n} catch (error) {\n  Customers = Mongoose.model('Customers')\n}\n\nmodule.exports = Customers\n","import Customers from '../../models/customers'\n\nexport const customerResolvers = {\n  Query: {\n    getCustomerByName: async (root, params) => {\n      const customer = await Customers.findOne({ name: params.name })\n      return customer\n    }\n  },\n\n  Mutation: {\n    createCustomer: async (root, params) => {\n      console.log(params)\n      const customer = await Customers.findOneAndUpdate(\n        { name: params.name },\n        { $set: { name: params.name, agentid: params.agentid, status: 'prospect' } },\n        { new: true, upsert: true }\n      )\n      return customer\n    }\n  }\n}\n","import * as customerType from './customer.graphql'\n\nexport { customerResolvers } from './customer-resolvers'\nexport { customerType }\n","module.exports = \"type User {\\n  _id: ID!\\n  name: String!\\n  gender: String\\n  managerid: [String]\\n  customerids: [String]\\n}\\n\\ntype Query {\\n  getUser(name: String, gender: String): User\\n  users: [User]\\n}\\n\\ntype Mutation {\\n  createUser(name: String, gender: String): User\\n}\"","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst userSchema = new Schema({\n  name: { type: String, default: '' },\n  organization: {\n    name: { type: String, default: '' },\n    office: { type: String, default: '' },\n    offcies: { type: Array, default: [] }\n  },\n  profile: {\n    name: { type: String, default: '' },\n    firstName: { type: String, default: '' },\n    lastName: { type: String, default: '' }\n  },\n  roles: { type: Array, default: ['basic bitch'] },\n  password: { type: String, default: '' },\n  gender: { type: String, default: 'male' },\n  managerid: { type: Schema.ObjectId, ref: 'Users' },\n  customerids: [{ type: Schema.ObjectId, ref: 'Customers' }],\n  createdAt: { type: Date, default: Date.now },\n  updatedAt: { type: Date, default: Date.now },\n  dialogflow: {\n    userStorage: { type: Object, default: {} }\n  }\n})\n\nlet Users\n\ntry {\n  Users = Mongoose.model('Users', userSchema)\n} catch (error) {\n  Users = Mongoose.model('Users')\n}\nmodule.exports = Users\n","import Users from '../../models/users'\n\nexport const userResolvers = {\n  Query: {\n    getUser: async (root, params) => {\n      console.log(root, params)\n      let user\n      if (params.name) {\n        user = await Users.findOne({ name: params.name })\n      }\n      if (params.gender) {\n        user = await Users.findOne({ gender: params.gender })\n      }\n      return user\n    }\n  },\n  Mutation: {\n    createUser: async (root, params) => {\n      console.log(root, params)\n      const user = await Users.findOneAndUpdate(\n        { name: params.name },\n        { $set: { name: params.name, gender: params.gender } },\n        { new: true, upsert: true }\n      )\n      return user\n    }\n  }\n}\n\n","import * as userType from './user.graphql'\n\nexport { userResolvers } from './user-resolvers.js'\nexport { userType }\n","module.exports = require(\"lodash\");","module.exports = require(\"graphql-tools\");","import { makeExecutableSchema } from 'graphql-tools'\nimport _ from 'lodash'\n\n// import userSchema from './user/user-schema'\n\nimport { userType, userResolvers } from './user'\nimport { customerType, customerResolvers } from './customer'\nimport { itemType, itemResolvers } from './item'\n\nconst baseSchema = `\nschema {\n  query: Query\n  mutation: Mutation\n}\n`\n\nconst schema = makeExecutableSchema({\n  typeDefs: [\n    baseSchema,\n    userType.default,\n    customerType.default,\n    itemType.default\n  ],\n  resolvers: _.merge(\n    {},\n    userResolvers,\n    customerResolvers,\n    itemResolvers\n  )\n})\n\nexport default schema\n\n","module.exports = require(\"apollo-server-hapi\");","import { graphqlHapi } from 'apollo-server-hapi'\n\nimport schema from './schema'\n\nexport default {\n  plugin: graphqlHapi,\n  options: {\n    path: '/graphql',\n    graphqlOptions: ({ payload }) => {\n      console.log(payload, '<-- our graphQL request body')\n      return {\n        schema\n      }\n    }\n  }\n}\n\n","module.exports = require(\"events\");","\nimport Events from 'events'\n\nconst maximumListeners = 100\nEvents.EventEmitter.prototype._maxListeners = maximumListeners\nprocess.setMaxListeners(maximumListeners)\n\nexport default {\n  port: process.env.PORT,\n  host: '0.0.0.0',\n  routes: {\n    cors: true\n  }\n}\n","module.exports = require(\"confidence\");","/**\n * Module imports\n *\n **/\nimport Confidence from 'confidence'\n\n/**\n * Project imports\n *\n **/\n\nimport pkg from '../../../package.json'\n\nconst criteria = {\n  env: process.env.NODE_ENV,\n  dockerEnv: process.env.DOCKER_ENV\n}\n\nimport server from './server'\n\nconst config = {\n  $meta: 'main server config',\n  pkg,\n  server\n}\n\nconst store = new Confidence.Store(config)\n\nexport default {\n  get: key => store.get(key, criteria),\n  load: doc => store.load(doc),\n  store\n}\n","module.exports = require(\"graphql-playground-middleware-hapi\");","import hapiPlayground from 'graphql-playground-middleware-hapi'\n\nexport default {\n  plugin: hapiPlayground,\n  options: {\n    path: `/playground`, //eslint-disable-line\n    endpoint: `/graphql` //eslint-disable-line\n  }\n}\n","// import Confidence from 'confidence'\n\nimport playground from './playground'\nimport Config from './config'\nimport graphql from './graphql'\n// const mongo = require('./mongo')\n\n// const criteria = { env: process.env.NODE_ENV }\n\nconst manifest = {\n  $meta: 'main server manifest',\n  server: Config.get('/server'),\n  register: {\n    plugins: [\n      {\n        plugin: require('./hello')\n      },\n      // {\n      //   plugin: mongo\n      // },\n      graphql,\n      playground\n    ]\n  }\n}\n\nexport default manifest\n","module.exports = require(\"graphql-playground-middleware-lambda\");","module.exports = require(\"hapi\");","import hapi from 'hapi'\nimport mongoose from 'mongoose'\nimport lambdaPlayground from 'graphql-playground-middleware-lambda'\n\nimport Manifest from './src/api/manifest'\n\nlet server = null\nconst MongoDBUrl = process.env.MONGODB_URI\n\nexports.handler = async (event, context) => { //eslint-disable-line\n  try {\n    if (server === null) {\n      server = new hapi.Server({\n        host: 'localhost',\n        port: 3001,\n        routes: { cors: true }\n      })\n      await server.register(Manifest.register.plugins)\n    }\n    await server.start()\n    mongoose.connect(MongoDBUrl, {}).then(() => {console.log('connected to mongo db')}).catch(error => {console.log(error, 'asfsafsaf')})\n  } catch (error) {\n    console.log('asdfsadf', error)\n    return error\n  }\n\n  const { path, queryStringParameters: params, httpMethod: method, body: payload, headers: reqHeaders } = event\n\n  let url = path\n  if (params) {\n    const qs = Object.keys(params).map(key => `${key}=${params[key]}`)\n    if (qs.length > 0) url = `${url}?${qs.join('&')}`\n  }\n  const { statusCode, headers, result: body } = await server.inject({\n    method,\n    url,\n    payload,\n    headers: reqHeaders,\n    validate: false\n  })\n\n  delete headers['content-encoding']\n  delete headers['transfer-encoding']\n  return { statusCode, headers, body }\n}\n\nexports.playground = lambdaPlayground({\n  endpoint: `/graphql`\n})\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"mongoose\"","webpack:///./src/api/helpers/logger.js","webpack:///./src/api/models/users.js","webpack:///external \"jsonwebtoken\"","webpack:///./src/api/config/index.js","webpack:///external \"bcryptjs\"","webpack:///external \"boom\"","webpack:///external \"joi\"","webpack:///./src/api/helpers/index.js","webpack:///./src/api/models/inventory.js","webpack:///./handler.js","webpack:///external \"hapi\"","webpack:///external \"graphql-playground-middleware-lambda\"","webpack:///external \"bluebird\"","webpack:///./src/api/manifest.js","webpack:///./src/api/playground/index.js","webpack:///external \"graphql-playground-middleware-hapi\"","webpack:///external \"confidence\"","webpack:///./src/api/config/server.js","webpack:///external \"events\"","webpack:///./src/api/config/auth.js","webpack:///./src/api/graphql/index.js","webpack:///external \"apollo-server-hapi\"","webpack:///./src/api/graphql/schema.js","webpack:///external \"graphql-tools\"","webpack:///external \"lodash\"","webpack:///./src/api/graphql/user/index.js","webpack:///./src/api/graphql/user/user-resolvers.js","webpack:///./src/api/graphql/user/user.graphql","webpack:///./src/api/graphql/customer/index.js","webpack:///./src/api/graphql/customer/customer-resolvers.js","webpack:///./src/api/models/customers.js","webpack:///./src/api/graphql/customer/customer.graphql","webpack:///./src/api/graphql/item/index.js","webpack:///./src/api/graphql/item/item-resolvers.js","webpack:///./src/api/models/items.js","webpack:///./src/api/graphql/item/item.graphql","webpack:///./src/api/users/index.js","webpack:///./src/api/users/login.js","webpack:///external \"hoek\"","webpack:///external \"path\"","webpack:///external \"debug\"","webpack:///external \"stack-trace\"","webpack:///./src/api/users/logout.js","webpack:///./src/api/users/post-users.js","webpack:///./src/api/users/post-csv.js","webpack:///external \"csvtojson\"","webpack:///external \"request-promise\"","webpack:///./src/api/users/post-signature.js","webpack:///./src/api/services/aws.js","webpack:///external \"aws-sdk\"","webpack:///./src/api/users/get-inventory.js","webpack:///./src/api/hello/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","target","echo","trace","stackTrace","length","frame","basename","path","getFileName","replace","method","getFunctionName","getLineNumber","logger","log","_debug2","default","error","console","Schema","Mongoose","userSchema","email","type","String","organization","office","offices","Array","profile","firstName","lastName","roles","password","gender","managerid","ObjectId","ref","customerids","createdAt","Date","now","updatedAt","dialogflow","userStorage","role","Users","model","criteria","env","dockerEnv","process","DOCKER_ENV","config","$meta","pkg","server","auth","store","Confidence","Store","load","doc","createJwt","user","contents","id","_id","scope","options","Hoek","applyToDefaults","expires","verifyOptions","algorithms","Config","Jwt","sign","algorithm","expiresIn","inventorySchema","adminid","items","Inventory","MONGODB_URI","autoIndex","reconnectTries","Number","MAX_VALUE","reconnectInterval","poolSize","bufferMaxEntries","native_parser","promiseLibrary","Bluebird","useNewUrlParser","handler","async","event","context","hapi","Server","host","port","routes","cors","register","Manifest","plugins","mongoose","connect","start","params","queryStringParameters","httpMethod","payload","body","reqHeaders","headers","url","qs","keys","map","join","_ref","inject","validate","statusCode","result","JSON","stringify","playground","_graphqlPlaygroundMiddlewareLambda2","endpoint","_users","manifest","plugin","graphql","concat","userPlugins","hapiPlayground","Events","EventEmitter","_maxListeners","setMaxListeners","PORT","$filter","development","sandbox","production","JWT_SECRET","test","$default","complete","headerKey","urlKey","_apolloServerHapi","graphqlHapi","graphqlOptions","schema","_graphqlTools","_user","_customer","_item","makeExecutableSchema","typeDefs","baseSchema","userType","customerType","itemType","resolvers","_","merge","userResolvers","customerResolvers","itemResolvers","Query","getUser","root","findOne","Mutation","createUser","findOneAndUpdate","$set","new","upsert","getCustomerByName","Customers","createCustomer","agentid","status","customerSchema","getItemByName","Items","itemSchema","description","sku","price","login","logout","postUsers","postCsv","postSignature","getInventory","_helpers","request","h","organization.name","exec","Boom","unauthorized","Bcrypt","compare","token","response","notFound","route","Joi","string","required","Promise","resolve","update","$addToSet","salt","genSalt","hash","_boom2","decoded","jwt","decode","orgName","uri","csvUrl","json","stream","_requestPromise2","_csvtojson2","fromString","then","obj","inventory","catch","err","aws","Aws","getSignedUrl","fileName","fileType","_classCallCheck","this","accessKeyId","AWS_ACCESS_KEY_ID","secretAccessKey","AWS_SECRET_ACCESS_KEY","AWS","s3","S3","signedRequest","Bucket","Key","Expires","ContentType","ACL","query"],"mappings":"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","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"mongoose\");","import path from 'path'\n\nimport debug from 'debug'\nimport stackTrace from 'stack-trace'\n\nexport default target => {\n  const echo = () => {\n    const trace = stackTrace.get()\n    if (trace.length > 1) {\n      const deep = 2\n      const frame = trace[deep]\n      const basename = path.basename(frame.getFileName()).replace('.js', '')\n      const method = frame.getFunctionName()\n      const functionName = method ? method : 'anonymous'\n      return ` ${basename}:${functionName}:${frame.getLineNumber()}`\n    }\n    return ' '\n  }\n  const logger = {\n    log: debug(`TP:${target}${echo()}`), // eslint-disable-line\n    error: debug(`TP:${target}${echo()}`) // eslint-disable-line\n  }\n\n  logger.log.log = console.log.bind(console) // eslint-disable-line\n  logger.error.log = console.error.bind(console) // eslint-disable-line\n\n  return logger\n}\n","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst userSchema = new Schema({\n  email: { type: String, default: '' },\n  organization: {\n    name: { type: String, default: '' },\n    office: { type: String, default: '' },\n    offices: { type: Array, default: [] }\n  },\n  profile: {\n    name: { type: String, default: '' },\n    firstName: { type: String, default: '' },\n    lastName: { type: String, default: '' }\n  },\n  roles: { type: Array, default: ['basic bitch'] },\n  password: { type: String, default: '' },\n  gender: { type: String, default: 'male' },\n  managerid: { type: Schema.ObjectId, ref: 'Users' },\n  customerids: [{ type: Schema.ObjectId, ref: 'Customers' }],\n  createdAt: { type: Date, default: Date.now },\n  updatedAt: { type: Date, default: Date.now },\n  dialogflow: {\n    userStorage: { type: Object, default: {} }\n  },\n  role: { type: String, default: '' }\n})\n\nlet Users\n\ntry {\n  Users = Mongoose.model('Users', userSchema)\n} catch (error) {\n  Users = Mongoose.model('Users')\n}\nmodule.exports = Users\n","module.exports = require(\"jsonwebtoken\");","/**\n * Module imports\n *\n **/\nimport Confidence from 'confidence'\n\n/**\n * Project imports\n *\n **/\n\nimport pkg from '../../../package.json'\n\nconst criteria = {\n  env: process.env.NODE_ENV,\n  dockerEnv: process.env.DOCKER_ENV\n}\n\nimport server from './server'\nimport auth from './auth'\n\nconst config = {\n  $meta: 'main server config',\n  pkg,\n  server,\n  auth\n}\n\nconst store = new Confidence.Store(config)\n\nexport default {\n  get: key => store.get(key, criteria),\n  load: doc => store.load(doc),\n  store\n}\n","module.exports = require(\"bcryptjs\");","module.exports = require(\"boom\");","module.exports = require(\"joi\");","import Hoek from 'hoek'\nimport Jwt from 'jsonwebtoken'\n\nimport Config from '../config'\n\nexport const createJwt = user => {\n  const contents = {\n    id: user._id,\n    scope: user.roles,\n    organization: user.organization,\n    createdAt: Date.now()\n  }\n\n  const options = Hoek.applyToDefaults(\n    {\n      key: null,\n      expires: '1m',\n      verifyOptions: { algorithms: ['HS256'] }\n    },\n    Config.get('/auth')\n  )\n\n  const token = Jwt.sign(contents, options.key, {\n    algorithm: options.verifyOptions.algorithms[0],\n    expiresIn: options.expires\n  })\n\n  return token\n}\n","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst inventorySchema = new Schema({\n  organization: { type: String, default: '' },\n  adminid: { type: Schema.ObjectId, ref: 'Users' },\n  items: { type: Array, default: [] }\n})\n\nlet Inventory\n\ntry {\n  Inventory = Mongoose.model('Inventory', inventorySchema)\n} catch (error) {\n  Inventory = Mongoose.model('Inventory')\n}\n\nmodule.exports = Inventory\n","import hapi from 'hapi'\nimport mongoose from 'mongoose'\nimport lambdaPlayground from 'graphql-playground-middleware-lambda'\nimport Bluebird from 'bluebird'\n\nimport Manifest from './src/api/manifest'\n\nlet server = null\nconst MongoDBUrl = process.env.MONGODB_URI\n\nconst options = {\n  // useMongoClient: true,\n  autoIndex: false, // Don't build indexes\n  reconnectTries: Number.MAX_VALUE, // Never stop trying to reconnect\n  reconnectInterval: 500, // Reconnect every 500ms\n  poolSize: 10, // Maintain up to 10 socket connections\n  // If not connected, return errors immediately rather than waiting for reconnect\n  bufferMaxEntries: 0\n}\n\noptions.db = { native_parser: true } // eslint-disable-line camelcase\noptions.autoReconnect = true\noptions.promiseLibrary = Bluebird\n// options.socketOptions = {}\n// options.socketOptions.keepAlive = 30000\n// options.socketOptions.connectTimeoutMS = 300000\n// options.socketOptions.socketTimeoutMS = 120000\noptions.useNewUrlParser = true\n\nexports.handler = async (event, context) => { //eslint-disable-line\n  try {\n    if (server === null) {\n      server = new hapi.Server({\n        host: 'localhost',\n        port: 3002,\n        routes: { cors: true }\n      })\n      await server.register(Manifest.register.plugins)\n    }\n    await mongoose.connect('mongodb+srv://devadmin:huzzah@cluster0-g1jmo.mongodb.net/test?retryWrites=true', options)\n    await server.start()\n  } catch (error) {\n    return error\n  }\n\n  const { path, queryStringParameters: params, httpMethod: method, body: payload, headers: reqHeaders } = event\n\n  let url = path\n  if (params) {\n    const qs = Object.keys(params).map(key => `${key}=${params[key]}`)\n    if (qs.length > 0) url = `${url}?${qs.join('&')}`\n  }\n  const { statusCode, headers, result: body } = await server.inject({\n    method,\n    url,\n    payload,\n    headers: reqHeaders,\n    validate: false\n  })\n  \n  delete headers['content-encoding']\n  delete headers['transfer-encoding']\n  return { statusCode, headers, body: JSON.stringify(body) }\n}\n\nexports.playground = lambdaPlayground({\n  endpoint: `/graphql`\n})\n","module.exports = require(\"hapi\");","module.exports = require(\"graphql-playground-middleware-lambda\");","module.exports = require(\"bluebird\");","// import Confidence from 'confidence'\n\nimport playground from './playground'\nimport Config from './config'\nimport graphql from './graphql'\nimport { userPlugins } from './users'\n\n// const mongo = require('./mongo')\n\n// const criteria = { env: process.env.NODE_ENV }\nconst manifest = {\n  $meta: 'main server manifest',\n  server: Config.get('/server'),\n  register: {\n    plugins: [\n      {\n        plugin: require('./hello')\n      },\n      // {\n      //   plugin: require('./login')\n      // },\n      // {\n      //   plugin: mongo\n      // },\n      graphql,\n      playground\n    ]\n  }\n}\n\nmanifest.register.plugins = manifest.register.plugins.concat(userPlugins)\nexport default manifest\n","import hapiPlayground from 'graphql-playground-middleware-hapi'\n\nexport default {\n  plugin: hapiPlayground,\n  options: {\n    path: `/playground`, //eslint-disable-line\n    endpoint: `/graphql` //eslint-disable-line\n  }\n}\n","module.exports = require(\"graphql-playground-middleware-hapi\");","module.exports = require(\"confidence\");","\nimport Events from 'events'\n\nconst maximumListeners = 100\nEvents.EventEmitter.prototype._maxListeners = maximumListeners\nprocess.setMaxListeners(maximumListeners)\n\nexport default {\n  port: process.env.PORT,\n  host: '0.0.0.0',\n  routes: {\n    cors: true\n  }\n}\n","module.exports = require(\"events\");","// https://github.com/dwyl/hapi-auth-jwt2#optional-parameters\nconst auth = {}\n\nauth.key = {\n  $filter: 'env',\n  development: 'development-key',\n  sandbox: 'giQqgR98eAJJtF[92mRoAnV]U3}sUhtPd$z&vW]>h7%Us3R24ZL)Kb3)',\n  production: process.env.JWT_SECRET || 'giQqgR98eAJJtF[92mRoAnV]U3}sUhtPd$z&vW]>h7%Us3R24ZL)Kb3)',\n  test: 'test-key',\n  $default: null\n}\n\nauth.expires = {\n  $filter: 'env',\n  development: '30d',\n  sandbox: '30d',\n  production: '30d',\n  test: '1m',\n  $default: '1h'\n}\n\nauth.verifyOptions = {\n  algorithms: ['HS256']\n}\n\nauth.complete = false\nauth.headerKey = process.env.NODE_ENV === 'test' ? true : false\n// auth.ignoreExpiration = process.env.NODE_ENV === 'production' ? false : true\nauth.urlKey = process.env.NODE_ENV === 'test' ? false : 'jwt'\n\nexport default auth\n","import { graphqlHapi } from 'apollo-server-hapi'\n\nimport schema from './schema'\n\nexport default {\n  plugin: graphqlHapi,\n  options: {\n    path: '/graphql',\n    graphqlOptions: ({ payload }) => {\n      console.log(payload, '<-- our graphQL request body')\n      return {\n        schema\n      }\n    }\n  }\n}\n\n","module.exports = require(\"apollo-server-hapi\");","import { makeExecutableSchema } from 'graphql-tools'\nimport _ from 'lodash'\n\n// import userSchema from './user/user-schema'\n\nimport { userType, userResolvers } from './user'\nimport { customerType, customerResolvers } from './customer'\nimport { itemType, itemResolvers } from './item'\n\nconst baseSchema = `\nschema {\n  query: Query\n  mutation: Mutation\n}\n`\n\nconst schema = makeExecutableSchema({\n  typeDefs: [\n    baseSchema,\n    userType.default,\n    customerType.default,\n    itemType.default\n  ],\n  resolvers: _.merge(\n    {},\n    userResolvers,\n    customerResolvers,\n    itemResolvers\n  )\n})\n\nexport default schema\n\n","module.exports = require(\"graphql-tools\");","module.exports = require(\"lodash\");","import * as userType from './user.graphql'\n\nexport { userResolvers } from './user-resolvers.js'\nexport { userType }\n","import Users from '../../models/users'\n\nexport const userResolvers = {\n  Query: {\n    getUser: async (root, params) => {\n      console.log(root, params)\n      let user\n      if (params.name) {\n        user = await Users.findOne({ name: params.name })\n      }\n      if (params.gender) {\n        user = await Users.findOne({ gender: params.gender })\n      }\n      return user\n    }\n  },\n  Mutation: {\n    createUser: async (root, params) => {\n      console.log(root, params)\n      const user = await Users.findOneAndUpdate(\n        { name: params.name },\n        { $set: { name: params.name, gender: params.gender } },\n        { new: true, upsert: true }\n      )\n      return user\n    }\n  }\n}\n\n","module.exports = \"type User {\\n  _id: ID!\\n  name: String!\\n  gender: String\\n  managerid: [String]\\n  customerids: [String]\\n}\\n\\ntype Query {\\n  getUser(name: String, gender: String): User\\n  users: [User]\\n}\\n\\ntype Mutation {\\n  createUser(name: String, gender: String): User\\n}\"","import * as customerType from './customer.graphql'\n\nexport { customerResolvers } from './customer-resolvers'\nexport { customerType }\n","import Customers from '../../models/customers'\n\nexport const customerResolvers = {\n  Query: {\n    getCustomerByName: async (root, params) => {\n      const customer = await Customers.findOne({ name: params.name })\n      return customer\n    }\n  },\n\n  Mutation: {\n    createCustomer: async (root, params) => {\n      console.log(params)\n      const customer = await Customers.findOneAndUpdate(\n        { name: params.name },\n        { $set: { name: params.name, agentid: params.agentid, status: 'prospect' } },\n        { new: true, upsert: true }\n      )\n      return customer\n    }\n  }\n}\n","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst customerSchema = new Schema({\n  name: { type: String, default: '' },\n  agentid: { type: Schema.ObjectId, ref: 'Users' },\n  status: { type: String, default: 'dead' }\n})\n\nlet Customers\ntry {\n  Customers = Mongoose.model('Customers', customerSchema)\n} catch (error) {\n  Customers = Mongoose.model('Customers')\n}\n\nmodule.exports = Customers\n","module.exports = \"type Customer {\\n  _id: ID!\\n  name: String!\\n  agentid: ID!\\n  status: String\\n}\\n\\nextend type Query {\\n  getCustomerByName(name: String): Customer\\n}\\n\\nextend type Mutation {\\n  createCustomer(name: String!, agentid: ID!, status: String): Customer\\n}\"","import * as itemType from './item.graphql'\n\nexport { itemResolvers } from './item-resolvers'\nexport { itemType }\n","import Items from '../../models/items'\n\nexport const itemResolvers = {\n  Query: {\n    getItemByName: async (root, params) => {\n      const item = await Items.findOne({ name: params.name })\n      return item\n    }\n  }\n}\n","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst itemSchema = new Schema({\n  description: { type: String, default: '' },\n  name: { type: String, default: '' },\n  sku: { type: String, default: '' },\n  price: { type: Number, default: 0 },\n  agentid: { type: Schema.ObjectId, ref: 'Users' }\n})\n\nlet Items\n\ntry {\n  Items = Mongoose.model('Items', itemSchema)\n} catch (error) {\n  Items = Mongoose.model('Items')\n}\n\nmodule.exports = Items\n","module.exports = \"type Item {\\n  _id: ID!\\n  name: String,\\n  description: String,\\n  price: String,\\n  agentid: ID\\n}\\n\\nextend type Query {\\n  getItemByName(name: String!): Item\\n}\"","import login from './login'\nimport logout from './logout'\nimport postUsers from './post-users'\nimport postCsv from './post-csv'\nimport postSignature from './post-signature'\nimport getInventory from './get-inventory'\n\nexport const userPlugins = [\n  login,\n  logout,\n  postUsers,\n  postCsv,\n  postSignature,\n  getInventory\n]\n","import Bcrypt from 'bcryptjs'\nimport Boom from 'boom'\nimport Joi from 'joi'\n\nimport Users from '../models/users'\nimport { createJwt } from '../helpers'\n/**\n * Plugin\n *\n **/\nimport Logger from '../helpers/logger'\n\nconst log = Logger('login').log\n\nconst handler = async (request, h) => {\n  try {\n    const payload = request.payload\n    console.log(payload, 'safdsafdsafsafsafd')\n    log(payload, 'payload')\n    const organization = payload.organization\n    const email = payload.email\n    const password = payload.password\n    const role = payload.role\n    const user = await Users.findOne({ email, role, 'organization.name': organization }).exec()\n    if (!user) {\n      return Boom.unauthorized()\n    }\n    const success = await Bcrypt.compare(password, user.password)\n    if (success) {\n      const token = createJwt(user)\n      return h.response(token)\n    } else {\n      return Boom.notFound('Sorry, that password or email is not recognized.')\n    }\n  } catch (error) {\n    throw error\n  }\n}\n\nexports.plugin = {\n  name: 'login',\n  register: async (server, options) => {\n    server.route({\n      method: 'POST',\n      path: '/login',\n      handler,\n      config: {\n        auth: false,\n        validate: {\n          payload: {\n            email: Joi.string().email().required(),\n            password: Joi.string().required(),\n            organization: Joi.string().required(),\n            role: Joi.string().required()\n          }\n        }\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","module.exports = require(\"hoek\");","module.exports = require(\"path\");","module.exports = require(\"debug\");","module.exports = require(\"stack-trace\");","// import Bcrypt from 'bcrypt'\n// import Boom from 'boom'\n// import Joi from 'joi'\n\n// import Users from '../models/users'\n\n/**\n * Plugin\n *\n **/\nimport Logger from '../helpers/logger'\n\nconst log = Logger('login').log\n\nconst handler = async (request, h) => {\n  return h.response('Ok')\n}\n\nexports.plugin = {\n  name: 'logout',\n  register: async (server, options) => {\n    server.route({\n      method: 'POST',\n      path: '/logout',\n      handler,\n      config: {\n        auth: false\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","import Bcrypt from 'bcryptjs'\nimport Boom from 'boom'\nimport Joi from 'joi'\n\nimport Users from '../models/users'\nimport { createJwt } from '../helpers'\n/**\n * Plugin\n *\n **/\n\n\nconst handler = async (request, h) => {\n  const payload = request.payload\n  try {\n    console.log(payload, ' this is the payload, hello testing a log in here')\n    // log(payload, 'payload')\n    const userCheck = await Users.findOne({ email: payload.email, organization: payload.organization }).exec()\n    if (userCheck) {\n      throw Boom.unauthorized()\n    }\n    const update = {\n      $set: {\n        organization: {\n          name: payload.organization\n        },\n        profile: {\n          firstName: payload.firstName,\n          lastName: payload.lastName,\n          name: `${payload.firstName} ${payload.lastName}`\n        },\n        role: payload.role,\n        email: payload.email\n      },\n      $addToSet: {\n        roles: payload.role\n      }\n    }\n    const saltRounds = 10\n    const salt = await Bcrypt.genSalt(saltRounds)\n    const hash = await Bcrypt.hash(payload.password, salt)\n    update.$set.password = hash\n\n    const user = await Users.findOneAndUpdate({ email: payload.email }, update, { upsert: true, new: true }).exec()\n    const token = createJwt(user)\n    return h.response({ token, user })\n  } catch (error) {\n    throw Boom(error)\n  }\n}\n\nexports.plugin = {\n  name: 'users',\n  register: async (server, options) => {\n    server.route({\n      method: 'POST',\n      path: '/users',\n      handler,\n      config: {\n        auth: false,\n        validate: {\n          payload: {\n            email: Joi.string().email().required(),\n            password: Joi.string().required(),\n            organization: Joi.string().required(),\n            role: Joi.string().required(),\n            firstName: Joi.string().required(),\n            lastName: Joi.string().required()\n          }\n        }\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","import csv from 'csvtojson'\nimport Request from 'request-promise'\nimport jwt from 'jsonwebtoken'\n\nimport Inventory from '../models/inventory'\n\n// const Json2csvParser = require('json2csv').Parser\n\n// const fields = ['name', 'description', 'sku', 'price']\n\n// const opts = { fields }\n\n// const fakeData = [\n//   {\n//     name: 'box',\n//     description: 'a box',\n//     sku: 247,\n//     price: 1\n//   },\n//   {\n//     name: 'cat',\n//     description: 'a cat',\n//     sku: 247,\n//     price: 1\n//   },\n//   {\n//     name: 'lid',\n//     description: 'a lid',\n//     sku: 247,\n//     price: 1\n//   }\n// ]\n\nconst handler = async (request, h) => {\n  const payload = request.payload\n  console.log(payload, 'payload')\n  try {\n    const decoded = await jwt.decode(payload.token)\n    const orgName = decoded.organization.name\n    const id = decoded.id\n    console.log(decoded, 'safdsafd')\n    const options = {\n      method: 'GET',\n      uri: payload.csvUrl,\n      headers: {},\n      json: true\n    }\n    try {\n      const stream = await Request(options)\n      return csv()\n        .fromString(stream)\n        .then(async obj => {\n          console.log(obj, 'csv object ')\n          const inventory = await Inventory.findOneAndUpdate(\n            {\n              organization: orgName\n            },\n            {\n              $set: {\n                items: obj\n              }\n            },\n            {\n              new: true,\n              upsert: true\n            }\n          ).exec()\n          // const inventory = new Inventory()\n          // inventory.items = obj\n          // await inventory.save()\n          return h.response(inventory.items)\n        })\n        .catch(err => {console.log(err, 'why')})\n    } catch (error) {\n      throw error\n      console.log(error, 'whyyyyy')\n    }\n    // console.log(stream, 'hello?')\n    // const myData = []\n    // for (let i = 0; i < fakeData.length; i++) {\n    //   const data = {}\n    //   const d = fakeData[i]\n    //   data.Name = d.name\n    //   data.Description = d.description\n    //   data.SKU = d.sku\n    //   data.Price = d.price\n    //   myData.push(data)\n    // }\n    // const parser = new Json2csvParser({ opts })\n    // const fakeCsv = parser.parse(myData)\n    // const json = await parse(csv, { columns: true })\n    // return csv()\n    //   .fromStream(stream)\n    //   .then(obj => {\n    //     console.log(csv, 'csv object ')\n    //     return obj\n    //   })\n    //   .catch(err => {console.log(error, 'why')})\n  } catch (error) {\n    return error\n  }\n}\n\nexports.plugin = {\n  name: 'csv',\n  register: async (server, options) => {\n    server.route({\n      method: 'POST',\n      path: '/csv',\n      handler,\n      config: {\n        auth: false\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","module.exports = require(\"csvtojson\");","module.exports = require(\"request-promise\");","import Aws from '../services/aws'\n\nconst handler = async (request, h) => {\n  const aws = new Aws()\n  const payload = request.payload\n  const url = await aws.getSignedUrl(\n    payload.fileName,\n    payload.fileType\n  )\n  return h.response(url)\n}\n\nexports.plugin = {\n  name: 'signature',\n  register: async (server, options) => {\n    server.route({\n      method: 'POST',\n      path: '/users/signature',\n      handler,\n      config: {\n        auth: false\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","// import moment from 'moment'\nimport AWS from 'aws-sdk'\n\nimport Logger from '../helpers/logger'\n// import Config from '../config'\n\n// const config = Config.get('/aws')\n// const log = Logger('aws service logger').log\n\nexport default class Aws {\n  constructor() {\n    this.accessKeyId = process.env.AWS_ACCESS_KEY_ID\n    this.secretAccessKey = process.env.AWS_SECRET_ACCESS_KEY\n  }\n\n  async getSignedUrl(name, type) {\n    AWS.config.update({ accessKeyId: this.accessKeyId, secretAccessKey: this.secretAccessKey })\n    const s3 = new AWS.S3({\n      accessKeyId: this.accessKeyId,\n      secretAccessKey: this.secretAccessKey\n    })\n\n    try {\n      const url = await s3.getSignedUrl('putObject', {\n        Bucket: 'truepackageinventory',\n        Key: name,\n        Expires: 60,\n        ContentType: type,\n        ACL: 'public-read'\n      })\n      return { signedRequest: url }\n    } catch (error) {\n      return 'no data'\n    }\n  }\n}\n","module.exports = require(\"aws-sdk\");","import jwt from 'jsonwebtoken'\n\nimport Inventory from '../models/inventory'\n\n\nconst handler = async (request, h) => {\n  console.log('made it in herer')\n  const token = request.query.token\n  const decoded = await jwt.decode(token)  \n  const inventory = await Inventory.findOne({ organization: decoded.organization.name }).exec()\n  if (!inventory) {\n    return h.response([])\n  } else {\n    return h.response(inventory)\n  }\n}\n\nexports.plugin = {\n  name: 'inventory',\n  register: async (server, options) => {\n    server.route({\n      method: 'GET',\n      path: '/users/inventory',\n      handler,\n      config: {\n        auth: false\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","/**\n * Hello\n * Returns a hello world message and the hostname of the machine the\n * server is running on\n *\n * url: /hello\n */\n\n/**\n * System imports\n *\n **/\n\n/**\n * Plugin\n *\n **/\nimport Logger from '../helpers/logger'\n\nconst log = Logger('hello').log\n\nexports.plugin = {\n  name: 'hello',\n  register: async (server, options) => {\n    server.route({\n      method: 'POST',\n      path: '/hello',\n      handler: async (request, h) => {\n        log('hi')\n        const obj = {\n          value: 'it works'\n        }\n        const response = h.response(obj)\n        // response.type('application/json')\n        console.log(request.payload, 'safdsafsfsf')\n        return response\n      }\n    })\n    return Promise.resolve()\n  }\n}\n"],"sourceRoot":""}
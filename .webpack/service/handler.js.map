{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"mongoose\"","webpack:///./src/api/helpers/logger.js","webpack:///./src/api/config/index.js","webpack:///external \"hoek\"","webpack:///./src/api/models/users.js","webpack:///external \"lodash\"","webpack:///external \"jsonwebtoken\"","webpack:///./src/api/helpers/index.js","webpack:///external \"joi\"","webpack:///external \"boom\"","webpack:///external \"bcrypt\"","webpack:///./src/api/login/index.js","webpack:///./src/api/hello/index.js","webpack:///external \"stack-trace\"","webpack:///external \"debug\"","webpack:///external \"path\"","webpack:///external \"bluebird\"","webpack:///./src/api/mongo/index.js","webpack:///./src/api/graphql/item/item.graphql","webpack:///./src/api/models/items.js","webpack:///./src/api/graphql/item/item-resolvers.js","webpack:///./src/api/graphql/item/index.js","webpack:///./src/api/graphql/customer/customer.graphql","webpack:///./src/api/models/customers.js","webpack:///./src/api/graphql/customer/customer-resolvers.js","webpack:///./src/api/graphql/customer/index.js","webpack:///./src/api/graphql/user/user.graphql","webpack:///./src/api/graphql/user/user-resolvers.js","webpack:///./src/api/graphql/user/index.js","webpack:///external \"graphql-tools\"","webpack:///./src/api/graphql/schema.js","webpack:///external \"apollo-server-hapi\"","webpack:///./src/api/graphql/index.js","webpack:///./src/api/config/auth.js","webpack:///external \"events\"","webpack:///./src/api/config/server.js","webpack:///external \"confidence\"","webpack:///external \"graphql-playground-middleware-hapi\"","webpack:///./src/api/playground/index.js","webpack:///./src/api/manifest.js","webpack:///external \"graphql-playground-middleware-lambda\"","webpack:///external \"hapi\"","webpack:///./handler.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","target","echo","trace","stackTrace","length","frame","basename","path","getFileName","replace","method","getFunctionName","getLineNumber","logger","log","_debug2","default","error","console","criteria","env","dockerEnv","process","DOCKER_ENV","config","$meta","pkg","server","auth","store","Confidence","Store","load","doc","Schema","Mongoose","userSchema","email","type","String","organization","office","offcies","Array","profile","firstName","lastName","roles","password","gender","managerid","ObjectId","ref","customerids","createdAt","Date","now","updatedAt","dialogflow","userStorage","role","Users","model","createJwt","user","contents","id","_id","scope","options","Hoek","applyToDefaults","expires","verifyOptions","algorithms","Config","Jwt","sign","algorithm","expiresIn","_helpers","handler","async","request","h","payload","findOne","exec","Boom","unauthorized","success","Bcrypt","compare","notFound","plugin","register","route","validate","Joi","string","required","Promise","resolve","Bluebird","cancellation","longStackTraces","monitoring","warnings","global","defaults","useMongoClient","autoIndex","reconnectTries","Number","MAX_VALUE","reconnectInterval","poolSize","bufferMaxEntries","native_parser","promiseLibrary","socketOptions","keepAlive","connectTimeoutMS","socketTimeoutMS","next","uri","isNotProduction","_","includes","isNotTesting","set","connection","readyState","connect","then","ext","done","startDisconnect","itemSchema","description","sku","price","agentid","Items","itemResolvers","Query","getItemByName","root","params","itemType","customerSchema","status","Customers","customerResolvers","getCustomerByName","Mutation","createCustomer","findOneAndUpdate","$set","new","upsert","customerType","userResolvers","getUser","createUser","userType","_graphqlTools","_user","_customer","_item","schema","makeExecutableSchema","typeDefs","baseSchema","resolvers","merge","_apolloServerHapi","graphqlHapi","graphqlOptions","_ref","$filter","development","sandbox","production","JWT_SECRET","test","$default","complete","headerKey","urlKey","Events","EventEmitter","_maxListeners","setMaxListeners","port","PORT","host","routes","cors","hapiPlayground","endpoint","mongo","manifest","plugins","graphql","playground","MongoDBUrl","MONGODB_URI","event","context","hapi","Server","Manifest","start","mongoose","catch","queryStringParameters","httpMethod","body","reqHeaders","headers","url","qs","keys","map","join","inject","statusCode","result","_graphqlPlaygroundMiddlewareLambda2"],"mappings":"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","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 43);\n","module.exports = require(\"mongoose\");","import path from 'path'\n\nimport debug from 'debug'\nimport stackTrace from 'stack-trace'\n\nexport default target => {\n  const echo = () => {\n    const trace = stackTrace.get()\n    if (trace.length > 1) {\n      const deep = 2\n      const frame = trace[deep]\n      const basename = path.basename(frame.getFileName()).replace('.js', '')\n      const method = frame.getFunctionName()\n      const functionName = method ? method : 'anonymous'\n      return ` ${basename}:${functionName}:${frame.getLineNumber()}`\n    }\n    return ' '\n  }\n  const logger = {\n    log: debug(`TP:${target}${echo()}`), // eslint-disable-line\n    error: debug(`TP:${target}${echo()}`) // eslint-disable-line\n  }\n\n  logger.log.log = console.log.bind(console) // eslint-disable-line\n  logger.error.log = console.error.bind(console) // eslint-disable-line\n\n  return logger\n}\n","/**\n * Module imports\n *\n **/\nimport Confidence from 'confidence'\n\n/**\n * Project imports\n *\n **/\n\nimport pkg from '../../../package.json'\n\nconst criteria = {\n  env: process.env.NODE_ENV,\n  dockerEnv: process.env.DOCKER_ENV\n}\n\nimport server from './server'\nimport auth from './auth'\n\nconst config = {\n  $meta: 'main server config',\n  pkg,\n  server,\n  auth\n}\n\nconst store = new Confidence.Store(config)\n\nexport default {\n  get: key => store.get(key, criteria),\n  load: doc => store.load(doc),\n  store\n}\n","module.exports = require(\"hoek\");","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst userSchema = new Schema({\n  email: { type: String, default: '' },\n  organization: {\n    name: { type: String, default: '' },\n    office: { type: String, default: '' },\n    offcies: { type: Array, default: [] }\n  },\n  profile: {\n    name: { type: String, default: '' },\n    firstName: { type: String, default: '' },\n    lastName: { type: String, default: '' }\n  },\n  roles: { type: Array, default: ['basic bitch'] },\n  password: { type: String, default: '' },\n  gender: { type: String, default: 'male' },\n  managerid: { type: Schema.ObjectId, ref: 'Users' },\n  customerids: [{ type: Schema.ObjectId, ref: 'Customers' }],\n  createdAt: { type: Date, default: Date.now },\n  updatedAt: { type: Date, default: Date.now },\n  dialogflow: {\n    userStorage: { type: Object, default: {} }\n  },\n  role: { type: String, default: '' }\n})\n\nlet Users\n\ntry {\n  Users = Mongoose.model('Users', userSchema)\n} catch (error) {\n  Users = Mongoose.model('Users')\n}\nmodule.exports = Users\n","module.exports = require(\"lodash\");","module.exports = require(\"jsonwebtoken\");","import Hoek from 'hoek'\nimport Jwt from 'jsonwebtoken'\n\nimport Config from '../config'\n\nexport const createJwt = user => {\n  const contents = {\n    id: user._id,\n    scope: user.roles,\n    organization: user.organization,\n    createdAt: Date.now()\n  }\n\n  const options = Hoek.applyToDefaults(\n    {\n      key: null,\n      expires: '1m',\n      verifyOptions: { algorithms: ['HS256'] }\n    },\n    Config.get('/auth')\n  )\n\n  const token = Jwt.sign(contents, options.key, {\n    algorithm: options.verifyOptions.algorithms[0],\n    expiresIn: options.expires\n  })\n\n  return token\n}\n","module.exports = require(\"joi\");","module.exports = require(\"boom\");","module.exports = require(\"bcrypt\");","import Bcrypt from 'bcrypt'\nimport Boom from 'boom'\nimport Joi from 'joi'\n\nimport Users from '../models/users'\nimport { createJwt } from '../helpers'\n/**\n * Plugin\n *\n **/\nimport Logger from '../helpers/logger'\n\nconst log = Logger('login').log\n\nconst handler = async (request, h) => {\n  try {\n    const payload = request.payload\n    log(payload, 'payload')\n    const organization = payload.organization\n    const email = payload.email\n    const password = payload.password\n    const role = payload.role\n    const user = await Users.findOne({ email, role, organization }).exec()\n    if (!user) {\n      return Boom.unauthorized()\n    }\n    // const saltRounds = 10\n    // Bcrypt.genSalt(saltRounds, function(err, salt) {\n    //     Bcrypt.hash(payload.password, salt, function(err, hash) {\n    //         // Store hash in your password DB.\n    //         console.log(hash, 'sadfsadf')\n    //     })\n    // })\n    const success = await Bcrypt.compare(password, user.password)\n    console.log(success, 'sdfsafd')\n    if (success) {\n      const token = createJwt(user)\n      return token\n    } else {\n      return Boom.notFound('Sorry, that password or email is not recognized.')\n    }\n  } catch (error) {\n    throw error\n  }\n}\n\nexports.plugin = {\n  name: 'login',\n  register: async (server, options) => {\n    server.route({\n      method: 'POST',\n      path: '/login',\n      handler,\n      config: {\n        auth: false,\n        validate: {\n          payload: {\n            email: Joi.string().email().required(),\n            password: Joi.string().required(),\n            organization: Joi.string().required(),\n            role: Joi.string().required()\n          }\n        }\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","/**\n * Hello\n * Returns a hello world message and the hostname of the machine the\n * server is running on\n *\n * url: /hello\n */\n\n/**\n * System imports\n *\n **/\n\n/**\n * Plugin\n *\n **/\nimport Logger from '../helpers/logger'\n\nconst log = Logger('hello').log\n\nexports.plugin = {\n  name: 'hello',\n  register: async (server, options) => {\n    server.route({\n      method: 'GET',\n      path: '/hello',\n      handler: async (request, h) => {\n        log('hi')\n        return 'it works'\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","module.exports = require(\"stack-trace\");","module.exports = require(\"debug\");","module.exports = require(\"path\");","module.exports = require(\"bluebird\");","/**\n * Mongo\n * Sets up our mongo connection\n */\n\n/**\n * Module imports\n *\n **/\nimport _ from 'lodash'\nimport Bluebird from 'bluebird'\nimport Hoek from 'hoek'\nimport Mongoose from 'mongoose'\n\nimport Config from '../config'\nimport Logger from '../helpers/logger'\n\nconst log = Logger('mongo').log\n\n/**\n * Project imports\n */\n\n/**\n * Setup\n *\n **/\nBluebird.config({\n  // http://bluebirdjs.com/docs/api/promise.config.html\n  // Enable cancellation\n  cancellation: false,\n  // Enable long stack traces\n  longStackTraces: true,\n  // Enable monitoring\n  monitoring: true,\n  // Enable warnings\n  warnings: true\n})\n\nglobal.Promise = Bluebird\n// @TODO Use native promises\n// Mongoose.Promise = global.Promise\nMongoose.Promise = Bluebird\n\nlet defaults = Config.get('/mongo')\n\nconst options = {\n  useMongoClient: true,\n  autoIndex: false, // Don't build indexes\n  reconnectTries: Number.MAX_VALUE, // Never stop trying to reconnect\n  reconnectInterval: 500, // Reconnect every 500ms\n  poolSize: 10, // Maintain up to 10 socket connections\n  // If not connected, return errors immediately rather than waiting for reconnect\n  bufferMaxEntries: 0\n}\n\noptions.db = { native_parser: true } // eslint-disable-line camelcase\noptions.autoReconnect = true\noptions.promiseLibrary = Bluebird\noptions.socketOptions = {}\noptions.socketOptions.keepAlive = 30000\noptions.socketOptions.connectTimeoutMS = 300000\noptions.socketOptions.socketTimeoutMS = 120000\n\n/**\n * Plugin\n *\n **/\n\nexports.plugin = {\n  name: 'mongo'\n}\n\nexports.plugin.register = async (server, options, next) => {\n  // defaults = Hoek.applyToDefaults(defaults, options)\n  defaults = {\n    uri: 'mongodb+srv://devadmin:huzzah@cluster0-g1jmo.mongodb.net/test?retryWrites=true'\n  }\n\n  const isNotProduction = !_.includes(['production'], process.env.NODE_ENV)\n  const isNotTesting = !_.includes(['test'], process.env.NODE_ENV)\n  Mongoose.set('debug', isNotTesting)\n\n  if (Mongoose.connection.readyState) {\n    log('Mongo: next, readyState') // eslint-disable-line\n    await Promise.resolve()\n  }\n  console.log('asdfsafsfd')\n  // setup our connection\n  log(['server', 'database', 'connection'], `${process.env.NODE_ENV} server CONNECTING to ${defaults.uri}`)\n\n  /*\n  NOTE: When your application starts up, Mongoose automatically calls createIndex for each defined\n  index in your schema. Mongoose will call createIndex for each index sequentially, and emit an 'index'\n  event on the model when all the createIndex calls succeeded or when there was an error. While nice for\n  development, it is recommended this behavior be disabled in production since index creation can cause\n  a significant performance impact. Disable the behavior by setting the autoIndex option of your schema to\n  false, or globally on the connection by setting the option config.autoIndex to false.\n  Online Reference\n    http://mongoosejs.com/docs/guide.html\n  */\n  options.config = { autoIndex: isNotProduction }\n\n  Mongoose.connect(defaults.uri, options).then(async () => {\n    log(['server', 'database', 'connection'], `${process.env.NODE_ENV} server CONNECTED to ${defaults.uri}`)\n    log('Mongo: next, connect') // eslint-disable-line\n    // return next() // call the next item in hapi bootstrap\n    await Promise.resolve()\n  })\n\n  /* istanbul ignore next */\n  server.ext({\n    type: 'onPostStop',\n    method: (request, done) => {\n      const startDisconnect = `${process.env.NODE_ENV} server DISCONNECTING from ${defaults.uri} due to server shutdown`\n      const endDisconnect = `${process.env.NODE_ENV} server DISCONNECTED from ${defaults.uri} due to server shutdown`\n      log(['server', 'database', 'connection'], startDisconnect)\n      log(startDisconnect) // eslint-disable-line no-console\n\n      const disconnectDB = () => {\n        Mongoose.disconnect(() => {\n          log(['server', 'database', 'connection'], endDisconnect)\n          log(endDisconnect) // eslint-disable-line no-console\n          return done()\n        })\n      }\n\n    //   if (process.env.NODE_ENV === 'feature' && process.env.JOBS !== 'true') {\n    //     log('We are on a feature branch, so drop database on server stop') // eslint-disable-line no-console\n    //     Mongoose.connection.dropDatabase(err => {\n    //       if (err) {\n    //         log('There was an error dropping DB', err) // eslint-disable-line no-console\n    //       } else {\n    //         log('Database dropped') // eslint-disable-line no-console\n    //       }\n    //       disconnectDB()\n    //     })\n    //   } else {\n    //     disconnectDB()\n    //   }\n    }\n  })\n}\n\n","module.exports = \"type Item {\\n  _id: ID!\\n  name: String,\\n  description: String,\\n  price: String,\\n  agentid: ID\\n}\\n\\nextend type Query {\\n  getItemByName(name: String!): Item\\n}\"","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst itemSchema = new Schema({\n  description: { type: String, default: '' },\n  name: { type: String, default: '' },\n  sku: { type: String, default: '' },\n  price: { type: Number, default: 0 },\n  agentid: { type: Schema.ObjectId, ref: 'Users' }\n})\n\nlet Items\n\ntry {\n  Items = Mongoose.model('Items', itemSchema)\n} catch (error) {\n  Items = Mongoose.model('Items')\n}\n\nmodule.exports = Items\n","import Items from '../../models/items'\n\nexport const itemResolvers = {\n  Query: {\n    getItemByName: async (root, params) => {\n      const item = await Items.findOne({ name: params.name })\n      return item\n    }\n  }\n}\n","import * as itemType from './item.graphql'\n\nexport { itemResolvers } from './item-resolvers'\nexport { itemType }\n","module.exports = \"type Customer {\\n  _id: ID!\\n  name: String!\\n  agentid: ID!\\n  status: String\\n}\\n\\nextend type Query {\\n  getCustomerByName(name: String): Customer\\n}\\n\\nextend type Mutation {\\n  createCustomer(name: String!, agentid: ID!, status: String): Customer\\n}\"","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst customerSchema = new Schema({\n  name: { type: String, default: '' },\n  agentid: { type: Schema.ObjectId, ref: 'Users' },\n  status: { type: String, default: 'dead' }\n})\n\nlet Customers\ntry {\n  Customers = Mongoose.model('Customers', customerSchema)\n} catch (error) {\n  Customers = Mongoose.model('Customers')\n}\n\nmodule.exports = Customers\n","import Customers from '../../models/customers'\n\nexport const customerResolvers = {\n  Query: {\n    getCustomerByName: async (root, params) => {\n      const customer = await Customers.findOne({ name: params.name })\n      return customer\n    }\n  },\n\n  Mutation: {\n    createCustomer: async (root, params) => {\n      console.log(params)\n      const customer = await Customers.findOneAndUpdate(\n        { name: params.name },\n        { $set: { name: params.name, agentid: params.agentid, status: 'prospect' } },\n        { new: true, upsert: true }\n      )\n      return customer\n    }\n  }\n}\n","import * as customerType from './customer.graphql'\n\nexport { customerResolvers } from './customer-resolvers'\nexport { customerType }\n","module.exports = \"type User {\\n  _id: ID!\\n  name: String!\\n  gender: String\\n  managerid: [String]\\n  customerids: [String]\\n}\\n\\ntype Query {\\n  getUser(name: String, gender: String): User\\n  users: [User]\\n}\\n\\ntype Mutation {\\n  createUser(name: String, gender: String): User\\n}\"","import Users from '../../models/users'\n\nexport const userResolvers = {\n  Query: {\n    getUser: async (root, params) => {\n      console.log(root, params)\n      let user\n      if (params.name) {\n        user = await Users.findOne({ name: params.name })\n      }\n      if (params.gender) {\n        user = await Users.findOne({ gender: params.gender })\n      }\n      return user\n    }\n  },\n  Mutation: {\n    createUser: async (root, params) => {\n      console.log(root, params)\n      const user = await Users.findOneAndUpdate(\n        { name: params.name },\n        { $set: { name: params.name, gender: params.gender } },\n        { new: true, upsert: true }\n      )\n      return user\n    }\n  }\n}\n\n","import * as userType from './user.graphql'\n\nexport { userResolvers } from './user-resolvers.js'\nexport { userType }\n","module.exports = require(\"graphql-tools\");","import { makeExecutableSchema } from 'graphql-tools'\nimport _ from 'lodash'\n\n// import userSchema from './user/user-schema'\n\nimport { userType, userResolvers } from './user'\nimport { customerType, customerResolvers } from './customer'\nimport { itemType, itemResolvers } from './item'\n\nconst baseSchema = `\nschema {\n  query: Query\n  mutation: Mutation\n}\n`\n\nconst schema = makeExecutableSchema({\n  typeDefs: [\n    baseSchema,\n    userType.default,\n    customerType.default,\n    itemType.default\n  ],\n  resolvers: _.merge(\n    {},\n    userResolvers,\n    customerResolvers,\n    itemResolvers\n  )\n})\n\nexport default schema\n\n","module.exports = require(\"apollo-server-hapi\");","import { graphqlHapi } from 'apollo-server-hapi'\n\nimport schema from './schema'\n\nexport default {\n  plugin: graphqlHapi,\n  options: {\n    path: '/graphql',\n    graphqlOptions: ({ payload }) => {\n      console.log(payload, '<-- our graphQL request body')\n      return {\n        schema\n      }\n    }\n  }\n}\n\n","// https://github.com/dwyl/hapi-auth-jwt2#optional-parameters\nconst auth = {}\n\nauth.key = {\n  $filter: 'env',\n  development: 'development-key',\n  sandbox: 'giQqgR98eAJJtF[92mRoAnV]U3}sUhtPd$z&vW]>h7%Us3R24ZL)Kb3)',\n  production: process.env.JWT_SECRET || 'giQqgR98eAJJtF[92mRoAnV]U3}sUhtPd$z&vW]>h7%Us3R24ZL)Kb3)',\n  test: 'test-key',\n  $default: null\n}\n\nauth.expires = {\n  $filter: 'env',\n  development: '30d',\n  sandbox: '30d',\n  production: '30d',\n  test: '1m',\n  $default: '1h'\n}\n\nauth.verifyOptions = {\n  algorithms: ['HS256']\n}\n\nauth.complete = false\nauth.headerKey = process.env.NODE_ENV === 'test' ? true : false\n// auth.ignoreExpiration = process.env.NODE_ENV === 'production' ? false : true\nauth.urlKey = process.env.NODE_ENV === 'test' ? false : 'jwt'\n\nexport default auth\n","module.exports = require(\"events\");","\nimport Events from 'events'\n\nconst maximumListeners = 100\nEvents.EventEmitter.prototype._maxListeners = maximumListeners\nprocess.setMaxListeners(maximumListeners)\n\nexport default {\n  port: process.env.PORT,\n  host: '0.0.0.0',\n  routes: {\n    cors: true\n  }\n}\n","module.exports = require(\"confidence\");","module.exports = require(\"graphql-playground-middleware-hapi\");","import hapiPlayground from 'graphql-playground-middleware-hapi'\n\nexport default {\n  plugin: hapiPlayground,\n  options: {\n    path: `/playground`, //eslint-disable-line\n    endpoint: `/graphql` //eslint-disable-line\n  }\n}\n","// import Confidence from 'confidence'\n\nimport playground from './playground'\nimport Config from './config'\nimport graphql from './graphql'\n\nconst mongo = require('./mongo')\n\n// const criteria = { env: process.env.NODE_ENV }\n\nconst manifest = {\n  $meta: 'main server manifest',\n  server: Config.get('/server'),\n  register: {\n    plugins: [\n      {\n        plugin: require('./hello')\n      },\n      {\n        plugin: require('./login')\n      },\n      {\n        plugin: mongo\n      },\n      graphql,\n      playground\n    ]\n  }\n}\n\nexport default manifest\n","module.exports = require(\"graphql-playground-middleware-lambda\");","module.exports = require(\"hapi\");","import hapi from 'hapi'\nimport mongoose from 'mongoose'\nimport lambdaPlayground from 'graphql-playground-middleware-lambda'\n\nimport Manifest from './src/api/manifest'\n\nlet server = null\nconst MongoDBUrl = process.env.MONGODB_URI\n\nexports.handler = async (event, context) => { //eslint-disable-line\n  try {\n    if (server === null) {\n      server = new hapi.Server({\n        host: 'localhost',\n        port: 3001,\n        routes: { cors: true }\n      })\n      await server.register(Manifest.register.plugins)\n    }\n    await server.start()\n    mongoose.connect(MongoDBUrl, {}).then(() => {console.log('connected to mongo db')}).catch(error => {console.log(error, 'asfsafsaf')})\n  } catch (error) {\n    return error\n  }\n\n  const { path, queryStringParameters: params, httpMethod: method, body: payload, headers: reqHeaders } = event\n\n  let url = path\n  if (params) {\n    const qs = Object.keys(params).map(key => `${key}=${params[key]}`)\n    if (qs.length > 0) url = `${url}?${qs.join('&')}`\n  }\n  const { statusCode, headers, result: body } = await server.inject({\n    method,\n    url,\n    payload,\n    headers: reqHeaders,\n    validate: false\n  })\n\n  delete headers['content-encoding']\n  delete headers['transfer-encoding']\n  return { statusCode, headers, body }\n}\n\nexports.playground = lambdaPlayground({\n  endpoint: `/graphql`\n})\n"],"sourceRoot":""}
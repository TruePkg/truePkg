{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"mongoose\"","webpack:///./src/api/models/users.js","webpack:///./src/api/helpers/logger.js","webpack:///./src/api/config/index.js","webpack:///external \"bcryptjs\"","webpack:///external \"boom\"","webpack:///external \"joi\"","webpack:///./src/api/helpers/index.js","webpack:///./handler.js","webpack:///external \"hapi\"","webpack:///external \"graphql-playground-middleware-lambda\"","webpack:///external \"bluebird\"","webpack:///./src/api/manifest.js","webpack:///./src/api/playground/index.js","webpack:///external \"graphql-playground-middleware-hapi\"","webpack:///external \"confidence\"","webpack:///./src/api/config/server.js","webpack:///external \"events\"","webpack:///./src/api/config/auth.js","webpack:///./src/api/graphql/index.js","webpack:///external \"apollo-server-hapi\"","webpack:///./src/api/graphql/schema.js","webpack:///external \"graphql-tools\"","webpack:///external \"lodash\"","webpack:///./src/api/graphql/user/index.js","webpack:///./src/api/graphql/user/user-resolvers.js","webpack:///./src/api/graphql/user/user.graphql","webpack:///./src/api/graphql/customer/index.js","webpack:///./src/api/graphql/customer/customer-resolvers.js","webpack:///./src/api/models/customers.js","webpack:///./src/api/graphql/customer/customer.graphql","webpack:///./src/api/graphql/item/index.js","webpack:///./src/api/graphql/item/item-resolvers.js","webpack:///./src/api/models/items.js","webpack:///./src/api/graphql/item/item.graphql","webpack:///./src/api/users/index.js","webpack:///./src/api/users/login.js","webpack:///external \"hoek\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"path\"","webpack:///external \"debug\"","webpack:///external \"stack-trace\"","webpack:///./src/api/users/logout.js","webpack:///./src/api/users/post-users.js","webpack:///./src/api/hello/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Schema","Mongoose","userSchema","email","type","String","default","organization","office","offices","Array","profile","firstName","lastName","roles","password","gender","managerid","ObjectId","ref","customerids","createdAt","Date","now","updatedAt","dialogflow","userStorage","role","Users","model","error","target","echo","trace","stackTrace","length","frame","basename","path","getFileName","replace","method","getFunctionName","getLineNumber","logger","log","_debug2","console","criteria","env","dockerEnv","process","DOCKER_ENV","config","$meta","pkg","server","auth","store","Confidence","Store","load","doc","createJwt","user","contents","id","_id","scope","options","Hoek","applyToDefaults","expires","verifyOptions","algorithms","Config","Jwt","sign","algorithm","expiresIn","MONGODB_URI","autoIndex","reconnectTries","Number","MAX_VALUE","reconnectInterval","poolSize","bufferMaxEntries","native_parser","promiseLibrary","Bluebird","useNewUrlParser","handler","async","event","context","hapi","Server","host","port","routes","cors","register","Manifest","plugins","mongoose","connect","start","params","queryStringParameters","httpMethod","payload","body","reqHeaders","headers","url","qs","keys","map","join","_ref","inject","validate","statusCode","result","JSON","stringify","playground","_graphqlPlaygroundMiddlewareLambda2","endpoint","_users","manifest","plugin","graphql","concat","userPlugins","hapiPlayground","Events","EventEmitter","_maxListeners","setMaxListeners","PORT","$filter","development","sandbox","production","JWT_SECRET","test","$default","complete","headerKey","urlKey","_apolloServerHapi","graphqlHapi","graphqlOptions","schema","_graphqlTools","_user","_customer","_item","makeExecutableSchema","typeDefs","baseSchema","userType","customerType","itemType","resolvers","_","merge","userResolvers","customerResolvers","itemResolvers","Query","getUser","root","findOne","Mutation","createUser","findOneAndUpdate","$set","new","upsert","getCustomerByName","Customers","createCustomer","agentid","status","customerSchema","getItemByName","Items","itemSchema","description","sku","price","login","logout","postUsers","_helpers","request","h","exec","Boom","unauthorized","Bcrypt","compare","token","response","notFound","route","Joi","string","required","Promise","resolve","update","$addToSet","salt","genSalt","hash"],"mappings":"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","file":"handler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"mongoose\");","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst userSchema = new Schema({\n  email: { type: String, default: '' },\n  organization: {\n    name: { type: String, default: '' },\n    office: { type: String, default: '' },\n    offices: { type: Array, default: [] }\n  },\n  profile: {\n    name: { type: String, default: '' },\n    firstName: { type: String, default: '' },\n    lastName: { type: String, default: '' }\n  },\n  roles: { type: Array, default: ['basic bitch'] },\n  password: { type: String, default: '' },\n  gender: { type: String, default: 'male' },\n  managerid: { type: Schema.ObjectId, ref: 'Users' },\n  customerids: [{ type: Schema.ObjectId, ref: 'Customers' }],\n  createdAt: { type: Date, default: Date.now },\n  updatedAt: { type: Date, default: Date.now },\n  dialogflow: {\n    userStorage: { type: Object, default: {} }\n  },\n  role: { type: String, default: '' }\n})\n\nlet Users\n\ntry {\n  Users = Mongoose.model('Users', userSchema)\n} catch (error) {\n  Users = Mongoose.model('Users')\n}\nmodule.exports = Users\n","import path from 'path'\n\nimport debug from 'debug'\nimport stackTrace from 'stack-trace'\n\nexport default target => {\n  const echo = () => {\n    const trace = stackTrace.get()\n    if (trace.length > 1) {\n      const deep = 2\n      const frame = trace[deep]\n      const basename = path.basename(frame.getFileName()).replace('.js', '')\n      const method = frame.getFunctionName()\n      const functionName = method ? method : 'anonymous'\n      return ` ${basename}:${functionName}:${frame.getLineNumber()}`\n    }\n    return ' '\n  }\n  const logger = {\n    log: debug(`TP:${target}${echo()}`), // eslint-disable-line\n    error: debug(`TP:${target}${echo()}`) // eslint-disable-line\n  }\n\n  logger.log.log = console.log.bind(console) // eslint-disable-line\n  logger.error.log = console.error.bind(console) // eslint-disable-line\n\n  return logger\n}\n","/**\n * Module imports\n *\n **/\nimport Confidence from 'confidence'\n\n/**\n * Project imports\n *\n **/\n\nimport pkg from '../../../package.json'\n\nconst criteria = {\n  env: process.env.NODE_ENV,\n  dockerEnv: process.env.DOCKER_ENV\n}\n\nimport server from './server'\nimport auth from './auth'\n\nconst config = {\n  $meta: 'main server config',\n  pkg,\n  server,\n  auth\n}\n\nconst store = new Confidence.Store(config)\n\nexport default {\n  get: key => store.get(key, criteria),\n  load: doc => store.load(doc),\n  store\n}\n","module.exports = require(\"bcryptjs\");","module.exports = require(\"boom\");","module.exports = require(\"joi\");","import Hoek from 'hoek'\nimport Jwt from 'jsonwebtoken'\n\nimport Config from '../config'\n\nexport const createJwt = user => {\n  const contents = {\n    id: user._id,\n    scope: user.roles,\n    organization: user.organization,\n    createdAt: Date.now()\n  }\n\n  const options = Hoek.applyToDefaults(\n    {\n      key: null,\n      expires: '1m',\n      verifyOptions: { algorithms: ['HS256'] }\n    },\n    Config.get('/auth')\n  )\n\n  const token = Jwt.sign(contents, options.key, {\n    algorithm: options.verifyOptions.algorithms[0],\n    expiresIn: options.expires\n  })\n\n  return token\n}\n","import hapi from 'hapi'\nimport mongoose from 'mongoose'\nimport lambdaPlayground from 'graphql-playground-middleware-lambda'\nimport Bluebird from 'bluebird'\n\nimport Manifest from './src/api/manifest'\n\nlet server = null\nconst MongoDBUrl = process.env.MONGODB_URI\n\nconst options = {\n  // useMongoClient: true,\n  autoIndex: false, // Don't build indexes\n  reconnectTries: Number.MAX_VALUE, // Never stop trying to reconnect\n  reconnectInterval: 500, // Reconnect every 500ms\n  poolSize: 10, // Maintain up to 10 socket connections\n  // If not connected, return errors immediately rather than waiting for reconnect\n  bufferMaxEntries: 0\n}\n\noptions.db = { native_parser: true } // eslint-disable-line camelcase\noptions.autoReconnect = true\noptions.promiseLibrary = Bluebird\n// options.socketOptions = {}\n// options.socketOptions.keepAlive = 30000\n// options.socketOptions.connectTimeoutMS = 300000\n// options.socketOptions.socketTimeoutMS = 120000\noptions.useNewUrlParser = true\n\nexports.handler = async (event, context) => { //eslint-disable-line\n  try {\n    if (server === null) {\n      server = new hapi.Server({\n        host: 'localhost',\n        port: 3001,\n        routes: { cors: true }\n      })\n      await server.register(Manifest.register.plugins)\n    }\n    await mongoose.connect('mongodb+srv://devadmin:huzzah@cluster0-g1jmo.mongodb.net/test?retryWrites=true', options)\n    await server.start()\n  } catch (error) {\n    return error\n  }\n\n  const { path, queryStringParameters: params, httpMethod: method, body: payload, headers: reqHeaders } = event\n\n  let url = path\n  if (params) {\n    const qs = Object.keys(params).map(key => `${key}=${params[key]}`)\n    if (qs.length > 0) url = `${url}?${qs.join('&')}`\n  }\n  const { statusCode, headers, result: body } = await server.inject({\n    method,\n    url,\n    payload,\n    headers: reqHeaders,\n    validate: false\n  })\n  \n  delete headers['content-encoding']\n  delete headers['transfer-encoding']\n  return { statusCode, headers, body: JSON.stringify(body) }\n}\n\nexports.playground = lambdaPlayground({\n  endpoint: `/graphql`\n})\n","module.exports = require(\"hapi\");","module.exports = require(\"graphql-playground-middleware-lambda\");","module.exports = require(\"bluebird\");","// import Confidence from 'confidence'\n\nimport playground from './playground'\nimport Config from './config'\nimport graphql from './graphql'\nimport { userPlugins } from './users'\n\n// const mongo = require('./mongo')\n\n// const criteria = { env: process.env.NODE_ENV }\n\nconst manifest = {\n  $meta: 'main server manifest',\n  server: Config.get('/server'),\n  register: {\n    plugins: [\n      {\n        plugin: require('./hello')\n      },\n      // {\n      //   plugin: require('./login')\n      // },\n      // {\n      //   plugin: mongo\n    // },\n      graphql,\n      playground\n    ]\n  }\n}\n\nmanifest.register.plugins = manifest.register.plugins.concat(userPlugins)\nexport default manifest\n","import hapiPlayground from 'graphql-playground-middleware-hapi'\n\nexport default {\n  plugin: hapiPlayground,\n  options: {\n    path: `/playground`, //eslint-disable-line\n    endpoint: `/graphql` //eslint-disable-line\n  }\n}\n","module.exports = require(\"graphql-playground-middleware-hapi\");","module.exports = require(\"confidence\");","\nimport Events from 'events'\n\nconst maximumListeners = 100\nEvents.EventEmitter.prototype._maxListeners = maximumListeners\nprocess.setMaxListeners(maximumListeners)\n\nexport default {\n  port: process.env.PORT,\n  host: '0.0.0.0',\n  routes: {\n    cors: true\n  }\n}\n","module.exports = require(\"events\");","// https://github.com/dwyl/hapi-auth-jwt2#optional-parameters\nconst auth = {}\n\nauth.key = {\n  $filter: 'env',\n  development: 'development-key',\n  sandbox: 'giQqgR98eAJJtF[92mRoAnV]U3}sUhtPd$z&vW]>h7%Us3R24ZL)Kb3)',\n  production: process.env.JWT_SECRET || 'giQqgR98eAJJtF[92mRoAnV]U3}sUhtPd$z&vW]>h7%Us3R24ZL)Kb3)',\n  test: 'test-key',\n  $default: null\n}\n\nauth.expires = {\n  $filter: 'env',\n  development: '30d',\n  sandbox: '30d',\n  production: '30d',\n  test: '1m',\n  $default: '1h'\n}\n\nauth.verifyOptions = {\n  algorithms: ['HS256']\n}\n\nauth.complete = false\nauth.headerKey = process.env.NODE_ENV === 'test' ? true : false\n// auth.ignoreExpiration = process.env.NODE_ENV === 'production' ? false : true\nauth.urlKey = process.env.NODE_ENV === 'test' ? false : 'jwt'\n\nexport default auth\n","import { graphqlHapi } from 'apollo-server-hapi'\n\nimport schema from './schema'\n\nexport default {\n  plugin: graphqlHapi,\n  options: {\n    path: '/graphql',\n    graphqlOptions: ({ payload }) => {\n      console.log(payload, '<-- our graphQL request body')\n      return {\n        schema\n      }\n    }\n  }\n}\n\n","module.exports = require(\"apollo-server-hapi\");","import { makeExecutableSchema } from 'graphql-tools'\nimport _ from 'lodash'\n\n// import userSchema from './user/user-schema'\n\nimport { userType, userResolvers } from './user'\nimport { customerType, customerResolvers } from './customer'\nimport { itemType, itemResolvers } from './item'\n\nconst baseSchema = `\nschema {\n  query: Query\n  mutation: Mutation\n}\n`\n\nconst schema = makeExecutableSchema({\n  typeDefs: [\n    baseSchema,\n    userType.default,\n    customerType.default,\n    itemType.default\n  ],\n  resolvers: _.merge(\n    {},\n    userResolvers,\n    customerResolvers,\n    itemResolvers\n  )\n})\n\nexport default schema\n\n","module.exports = require(\"graphql-tools\");","module.exports = require(\"lodash\");","import * as userType from './user.graphql'\n\nexport { userResolvers } from './user-resolvers.js'\nexport { userType }\n","import Users from '../../models/users'\n\nexport const userResolvers = {\n  Query: {\n    getUser: async (root, params) => {\n      console.log(root, params)\n      let user\n      if (params.name) {\n        user = await Users.findOne({ name: params.name })\n      }\n      if (params.gender) {\n        user = await Users.findOne({ gender: params.gender })\n      }\n      return user\n    }\n  },\n  Mutation: {\n    createUser: async (root, params) => {\n      console.log(root, params)\n      const user = await Users.findOneAndUpdate(\n        { name: params.name },\n        { $set: { name: params.name, gender: params.gender } },\n        { new: true, upsert: true }\n      )\n      return user\n    }\n  }\n}\n\n","module.exports = \"type User {\\n  _id: ID!\\n  name: String!\\n  gender: String\\n  managerid: [String]\\n  customerids: [String]\\n}\\n\\ntype Query {\\n  getUser(name: String, gender: String): User\\n  users: [User]\\n}\\n\\ntype Mutation {\\n  createUser(name: String, gender: String): User\\n}\"","import * as customerType from './customer.graphql'\n\nexport { customerResolvers } from './customer-resolvers'\nexport { customerType }\n","import Customers from '../../models/customers'\n\nexport const customerResolvers = {\n  Query: {\n    getCustomerByName: async (root, params) => {\n      const customer = await Customers.findOne({ name: params.name })\n      return customer\n    }\n  },\n\n  Mutation: {\n    createCustomer: async (root, params) => {\n      console.log(params)\n      const customer = await Customers.findOneAndUpdate(\n        { name: params.name },\n        { $set: { name: params.name, agentid: params.agentid, status: 'prospect' } },\n        { new: true, upsert: true }\n      )\n      return customer\n    }\n  }\n}\n","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst customerSchema = new Schema({\n  name: { type: String, default: '' },\n  agentid: { type: Schema.ObjectId, ref: 'Users' },\n  status: { type: String, default: 'dead' }\n})\n\nlet Customers\ntry {\n  Customers = Mongoose.model('Customers', customerSchema)\n} catch (error) {\n  Customers = Mongoose.model('Customers')\n}\n\nmodule.exports = Customers\n","module.exports = \"type Customer {\\n  _id: ID!\\n  name: String!\\n  agentid: ID!\\n  status: String\\n}\\n\\nextend type Query {\\n  getCustomerByName(name: String): Customer\\n}\\n\\nextend type Mutation {\\n  createCustomer(name: String!, agentid: ID!, status: String): Customer\\n}\"","import * as itemType from './item.graphql'\n\nexport { itemResolvers } from './item-resolvers'\nexport { itemType }\n","import Items from '../../models/items'\n\nexport const itemResolvers = {\n  Query: {\n    getItemByName: async (root, params) => {\n      const item = await Items.findOne({ name: params.name })\n      return item\n    }\n  }\n}\n","import Mongoose from 'mongoose'\n\nconst Schema = Mongoose.Schema\n\nconst itemSchema = new Schema({\n  description: { type: String, default: '' },\n  name: { type: String, default: '' },\n  sku: { type: String, default: '' },\n  price: { type: Number, default: 0 },\n  agentid: { type: Schema.ObjectId, ref: 'Users' }\n})\n\nlet Items\n\ntry {\n  Items = Mongoose.model('Items', itemSchema)\n} catch (error) {\n  Items = Mongoose.model('Items')\n}\n\nmodule.exports = Items\n","module.exports = \"type Item {\\n  _id: ID!\\n  name: String,\\n  description: String,\\n  price: String,\\n  agentid: ID\\n}\\n\\nextend type Query {\\n  getItemByName(name: String!): Item\\n}\"","import login from './login'\nimport logout from './logout'\nimport postUsers from './post-users'\n\nexport const userPlugins = [\n  login,\n  logout,\n  postUsers\n]\n","import Bcrypt from 'bcryptjs'\nimport Boom from 'boom'\nimport Joi from 'joi'\n\nimport Users from '../models/users'\nimport { createJwt } from '../helpers'\n/**\n * Plugin\n *\n **/\nimport Logger from '../helpers/logger'\n\nconst log = Logger('login').log\n\nconst handler = async (request, h) => {\n  try {\n    const payload = request.payload\n    log(payload, 'payload')\n    const organization = payload.organization\n    const email = payload.email\n    const password = payload.password\n    const role = payload.role\n    const user = await Users.findOne({ email, role, organization }).exec()\n    if (!user) {\n      return Boom.unauthorized()\n    }\n    // const saltRounds = 10\n    // Bcrypt.genSalt(saltRounds, function(err, salt) {\n    //     Bcrypt.hash(payload.password, salt, function(err, hash) {\n    //         // Store hash in your password DB.\n    //         console.log(hash, 'sadfsadf')\n    //     })\n    // })\n    const success = await Bcrypt.compare(password, user.password)\n    if (success) {\n      const token = createJwt(user)\n      return h.response(token)\n    } else {\n      return Boom.notFound('Sorry, that password or email is not recognized.')\n    }\n  } catch (error) {\n    throw error\n  }\n}\n\nexports.plugin = {\n  name: 'login',\n  register: async (server, options) => {\n    server.route({\n      method: 'POST',\n      path: '/login',\n      handler,\n      config: {\n        auth: false,\n        validate: {\n          payload: {\n            email: Joi.string().email().required(),\n            password: Joi.string().required(),\n            organization: Joi.string().required(),\n            role: Joi.string().required()\n          }\n        }\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","module.exports = require(\"hoek\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"path\");","module.exports = require(\"debug\");","module.exports = require(\"stack-trace\");","// import Bcrypt from 'bcrypt'\n// import Boom from 'boom'\n// import Joi from 'joi'\n\n// import Users from '../models/users'\n\n/**\n * Plugin\n *\n **/\nimport Logger from '../helpers/logger'\n\nconst log = Logger('login').log\n\nconst handler = async (request, h) => {\n  return h.response('Ok')\n}\n\nexports.plugin = {\n  name: 'logout',\n  register: async (server, options) => {\n    server.route({\n      method: 'POST',\n      path: '/logout',\n      handler,\n      config: {\n        auth: false\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","import Bcrypt from 'bcryptjs'\nimport Boom from 'boom'\nimport Joi from 'joi'\n\nimport Users from '../models/users'\nimport { createJwt } from '../helpers'\n/**\n * Plugin\n *\n **/\n// import Logger from '../helpers/logger'\n\n// const log = Logger('login').log\n\nconst handler = async (request, h) => {\n  const payload = request.payload\n  try {\n    console.log(payload, ' this is the payload, hello testing a log in here')\n    // log(payload, 'payload')\n    const userCheck = await Users.findOne({ email: payload.email, organization: payload.organization }).exec()\n    if (userCheck) {\n      // console.log(userCheck, 'aaaaaaaaaaaaaaaa')\n      return Boom.unauthorized()\n    }\n    const update = {\n      $set: {\n        organization: {\n          name: payload.organization\n        },\n        profile: {\n          firstName: payload.firstName,\n          lastName: payload.lastName,\n          name: `${payload.firstName} ${payload.lastName}`\n        },\n        role: payload.role,\n        email: payload.email\n      },\n      $addToSet: {\n        roles: payload.role\n      }\n    }\n    // console.log(update, 'updateeeee')\n    const saltRounds = 10\n    const salt = await Bcrypt.genSalt(saltRounds)\n    const hash = await Bcrypt.hash(payload.password, salt)\n    update.$set.password = hash\n\n    const user = await Users.findOneAndUpdate({ email: payload.email }, update, { upsert: true, new: true }).exec()\n    const token = createJwt(user)\n    return h.response({ token, user })\n  } catch (error) {\n    return error\n  }\n}\n\nexports.plugin = {\n  name: 'users',\n  register: async (server, options) => {\n    server.route({\n      method: 'POST',\n      path: '/users',\n      handler,\n      config: {\n        auth: false,\n        validate: {\n          payload: {\n            email: Joi.string().email().required(),\n            password: Joi.string().required(),\n            organization: Joi.string().required(),\n            role: Joi.string().required(),\n            firstName: Joi.string().required(),\n            lastName: Joi.string().required()\n          }\n        }\n      }\n    })\n    return Promise.resolve()\n  }\n}\n","/**\n * Hello\n * Returns a hello world message and the hostname of the machine the\n * server is running on\n *\n * url: /hello\n */\n\n/**\n * System imports\n *\n **/\n\n/**\n * Plugin\n *\n **/\nimport Logger from '../helpers/logger'\n\nconst log = Logger('hello').log\n\nexports.plugin = {\n  name: 'hello',\n  register: async (server, options) => {\n    server.route({\n      method: 'GET',\n      path: '/hello',\n      handler: async (request, h) => {\n        log('hi')\n        const obj = {\n          value: 'it works'\n        }\n        const response = h.response(obj)\n        response.type('application/json')\n        return response\n      }\n    })\n    return Promise.resolve()\n  }\n}\n"],"sourceRoot":""}